-- ORACLE SQL QUERY OVER THE VIEW THAT SHOWS DATABASE STATE:
SELECT * FROM V$INSTANCE

-- ORACLE SQL QUERY THAT SHOWS IF DATABASE IS OPENED
SELECT STATUS FROM V$INSTANCE

-- ORACLE SQL QUERY OVER THE VIEW THAT SHOW ORACLE DATABASE GENERAL PARAMETERS
SELECT * FROM V$SYSTEM_PARAMETER

-- ORACLE SQL QUERY TO KNOW ORACLE VERSION
SELECT VALUE FROM V$SYSTEM_PARAMETER WHERE NAME = 'COMPATIBLE'

-- ORACLE SQL QUERY TO KNOW THE PATH AND NAME OF SPFILE
SELECT VALUE FROM V$SYSTEM_PARAMETER WHERE NAME = 'SPFILE'

-- ORACLE SQL QUERY TO KNOW THE LOCALIZATION AND NUMBER OF CONTROL FILES
SELECT VALUE FROM V$SYSTEM_PARAMETER WHERE NAME = 'CONTROL_FILES'

-- ORACLE SQL QUERY TO SHOW THE DATABASE NAME.
SELECT VALUE FROM V$SYSTEM_PARAMETER WHERE NAME = 'DB_NAME'

-- ORACLE SQL QUERY OVER THE VIEW THAT SHOWS ACTUAL ORACLE CONECTIONS. 
-- TO USE IT THE USER NEED ADMINISTRATOR PRIVILEGES.
SELECT OSUSER, USERNAME, MACHINE, PROGRAM
FROM V$SESSION
ORDER BY OSUSER

-- ORACLE SQL QUERY THAT SHOW THE OPENED CONECTIONS GROUP BY THE PROGRAM THAT OPENS THE CONNECTION.
SELECT PROGRAM APLICACION, COUNT(PROGRAM) SESSIONS_NO
FROM V$SESSION
GROUP BY PROGRAM
ORDER BY SESSIONS_NO DESC

-- ORACLE SQL QUERY THAT SHOWS ORACLE USERS CONNECTED AND THE SESSIONS NUMBER FOR USER
SELECT USERNAME, COUNT(USERNAME) SESSIONS_NO
FROM V$SESSION
GROUP BY USERNAME
ORDER BY SESSIONS_NO DESC

-- OBJECTS OWNERS NUMBER OF OBJECTS FOR OWNER
SELECT OWNER, COUNT(OWNER) OBJECTS_NO
FROM DBA_OBJECTS
GROUP BY OWNER
ORDER BY OBJECTS_NO DESC

-- ORACLE SQL QUERY OVER THE DATA DICTIONARY (INCLUDES ALL VIEWS AND TABLES OF THE DATABASE)
SELECT * FROM DICTIONARY

-- ORACLE SQL QUERY THAT SHOWS DEFINITION DATA FROM A SPECIFIC TABLE 
-- (IN THIS CASE, ALL TABLES WITH STRING "XXX")
SELECT * FROM ALL_ALL_TABLES WHERE UPPER(TABLE_NAME) LIKE '%XXX%'

-- ORACLE SQL QUERY TO KNOW TABLES FROM ACTUAL USER
SELECT * FROM USER_TABLES

-- ORACLE SQL QUERY TO KNOW ALL THE OBJECTS OF THE CONNECTED USER
SELECT * FROM USER_CATALOG

-- ORACLE SQL QUERY FOR ORACLE DBA THAT SHOWS TABLESPACES, DISK USED, FREE SPACE AND DATAFILES:
SELECT T.TABLESPACE_NAME "TABLESPACE", T.STATUS "STATUS",
       ROUND(MAX(D.BYTES)/1024/1024,2) "TOTAL (MB)",
       ROUND((MAX(D.BYTES)/1024/1024) -
       (SUM(DECODE(F.BYTES, NULL,0, F.BYTES))/1024/1024),2) "USED (MB)",
       ROUND(SUM(DECODE(F.BYTES, NULL,0, F.BYTES))/1024/1024,2) "FREE (MB)",
       T.PCT_INCREASE "% INCREACE",
       SUBSTR(D.FILE_NAME,1,80) "FILE NAME"
FROM DBA_FREE_SPACE F, DBA_DATA_FILES D, DBA_TABLESPACES T
WHERE T.TABLESPACE_NAME = D.TABLESPACE_NAME AND
      F.TABLESPACE_NAME(+) = D.TABLESPACE_NAME
      AND F.FILE_ID(+) = D.FILE_ID GROUP BY T.TABLESPACE_NAME,
      D.FILE_NAME, T.PCT_INCREASE, T.STATUS ORDER BY 1,3 DESC

-- ORACLE SQL QUERY TO KNOW ORACLE PRODUCTS INSTALLED AND VERSION NUMBER.
SELECT * FROM PRODUCT_COMPONENT_VERSION

-- ORACLE SQL QUERY TO KNOW ROLES AND ROLES PRIVILEGES
SELECT * FROM ROLE_SYS_PRIVS

-- ORACLE SQL QUERY TO KNOW INTEGRITY RULES
SELECT CONSTRAINT_NAME, COLUMN_NAME FROM SYS.ALL_CONS_COLUMNS

-- ORACLE SQL QUERY TO KNOW TABLES OWNED BY A USER, IN THIS CASE "XXX":
SELECT TABLE_OWNER, TABLE_NAME FROM SYS.ALL_SYNONYMS WHERE TABLE_OWNER LIKE 'XXX'

-- ORACLE SQL QUERY FOR THE SAME AS LAST QUERY

SELECT DISTINCT TABLE_NAME
FROM ALL_ALL_TABLES
WHERE OWNER LIKE 'HR'

-- ORACLE PARAMETERS, ACTUAL VALUE AND ITS DESCRIPTION.
SELECT V.NAME, V.VALUE VALUE, DECODE(ISSYS_MODIFIABLE, 'DEFERRED',
'TRUE', 'FALSE') ISSYS_MODIFIABLE, DECODE(V.ISDEFAULT, 'TRUE', 'YES',
'FALSE', 'NO') "DEFAULT", DECODE(ISSES_MODIFIABLE, 'IMMEDIATE',
'YES','FALSE', 'NO', 'DEFERRED', 'NO', 'YES') SES_MODIFIABLE,
DECODE(ISSYS_MODIFIABLE, 'IMMEDIATE', 'YES', 'FALSE', 'NO',
'DEFERRED', 'YES','YES') SYS_MODIFIABLE , V.DESCRIPTION
FROM V$PARAMETER V
WHERE NAME NOT LIKE 'NLS%' ORDER BY 1

-- ORACLE SQL QUERY THAT SHOWS ORACLE USERS AND HIS DATA
SELECT * FROM DBA_USERS

-- ORACLE SQL QUERY TO KNOW TABLESPACES AND ITS OWNER:
SELECT OWNER, DECODE(PARTITION_NAME, NULL, SEGMENT_NAME,
SEGMENT_NAME || ':' || PARTITION_NAME) NAME,
SEGMENT_TYPE, TABLESPACE_NAME,BYTES,INITIAL_EXTENT,
NEXT_EXTENT, PCT_INCREASE, EXTENTS, MAX_EXTENTS
FROM DBA_SEGMENTS
WHERE 1=1 AND EXTENTS > 1 ORDER BY 9 DESC, 3

-- LAST SQL QUERIES EXECUTED ON ORACLE AND USER:
SELECT DISTINCT VS.SQL_TEXT, VS.SHARABLE_MEM,
VS.PERSISTENT_MEM, VS.RUNTIME_MEM, VS.SORTS,
VS.EXECUTIONS, VS.PARSE_CALLS, VS.MODULE,
VS.BUFFER_GETS, VS.DISK_READS, VS.VERSION_COUNT,
VS.USERS_OPENING, VS.LOADS,
TO_CHAR(TO_DATE(VS.FIRST_LOAD_TIME,
'YYYY-MM-DD/HH24:MI:SS'),'MM/DD HH24:MI:SS') FIRST_LOAD_TIME,
RAWTOHEX(VS.ADDRESS) ADDRESS, VS.HASH_VALUE HASH_VALUE ,
ROWS_PROCESSED , VS.COMMAND_TYPE, VS.PARSING_USER_ID ,
OPTIMIZER_MODE , AU.USERNAME PARSEUSER
FROM V$SQLAREA VS , ALL_USERS AU
WHERE (PARSING_USER_ID != 0) AND
(AU.USER_ID(+)=VS.PARSING_USER_ID)
AND (EXECUTIONS >= 1) ORDER BY BUFFER_GETS/EXECUTIONS DESC

-- ORACLE SQL QUERY TO KNOW ALL THE TABLESPACES:
SELECT * FROM V$TABLESPACE

-- ORACLE SQL QUERY TO KNOW FREE AND USED SHARED_POOL
SELECT NAME,TO_NUMBER(VALUE) BYTES
FROM V$PARAMETER WHERE NAME ='SHARED_POOL_SIZE'
UNION ALL
SELECT NAME,BYTES
FROM V$SGASTAT WHERE POOL = 'SHARED POOL' AND NAME = 'FREE MEMORY'
CURSORES ABIERTOS POR USUARIO
SELECT B.SID, A.USERNAME, B.VALUE CURSORES_ABIERTOS
FROM V$SESSION A,
V$SESSTAT B,
V$STATNAME C
WHERE C.NAME IN ('OPENED CURSORS CURRENT')
AND B.STATISTIC# = C.STATISTIC#
AND A.SID = B.SID
AND A.USERNAME IS NOT NULL
AND B.VALUE >0
ORDER BY 3

-- ORACLE SQL QUERY TO KNOW CACHE HITS (IT MUST BE MORE THAN 1%)
SELECT SUM(PINS) EJECUCIONES, SUM(RELOADS) FALLOS_CACHE,
TRUNC(SUM(RELOADS)/SUM(PINS)*100,2) PORCENTAJE_ACIERTOS
FROM V$LIBRARYCACHE
WHERE NAMESPACE IN ('TABLE/PROCEDURE','SQL AREA','BODY','TRIGGER');

-- COMPLETE SQL QUERIES EXECUTED WITH A SPECIFIC TEXT IN SQL SENTENCE.
SELECT C.SID, D.PIECE, C.SERIAL#, C.USERNAME, D.SQL_TEXT
FROM V$SESSION C, V$SQLTEXT D
WHERE C.SQL_HASH_VALUE = D.HASH_VALUE
AND UPPER(D.SQL_TEXT) LIKE '%WHERE CAMPO LIKE%'
ORDER BY C.SID, D.PIECE 

-- A SQL QUERY (FILTERED BY SID)
SELECT C.SID, D.PIECE, C.SERIAL#, C.USERNAME, D.SQL_TEXT
FROM V$SESSION C, V$SQLTEXT D
WHERE C.SQL_HASH_VALUE = D.HASH_VALUE
AND SID = 105
ORDER BY C.SID, D.PIECE

-- ORACLE SQL QUERY TO KNOW THE DATABASE SIZE
SELECT SUM(BYTES)/1024/1024 MB FROM DBA_EXTENTS

-- ORACLE SQL QUERY TO CALCULATE THE SIZE OF THE DATABASE DATA FILES
SELECT SUM(BYTES)/1024/1024 MB FROM DBA_DATA_FILES

-- ORACLE SQL QUERY TO CALCULATE THE SIZE OF A CONCRETE TABLE EXCLUDING THE INDEXES
SELECT SUM(BYTES)/1024/1024 MB FROM USER_SEGMENTS
WHERE SEGMENT_TYPE='TABLE' AND SEGMENT_NAME='TABLENAME'

-- ORACLE SQL QUERY TO CALCULATE THE SIZE OF A CONCRETE TABLE INCLUDING THE INDEXES
SELECT SUM(BYTES)/1024/1024 TABLE_ALLOCATION_MB FROM USER_SEGMENTS
WHERE SEGMENT_TYPE IN ('TABLE','INDEX') AND
(SEGMENT_NAME='TABLENAME'OR SEGMENT_NAME IN
(SELECT INDEX_NAME FROM USER_INDEXES WHERE TABLE_NAME='TABLENAME'))

-- ORACLE SQL QUERY TO KNOW THE MEMORY USED BY A COLUMN IN A TABLE
SELECT SUM(VSIZE('COLUMNNAME'))/1024/1024 MB FROM 'TABLENAME'

-- ORACLE SQL QUERY TO CALCULATE MEMORY USED BY A USER
SELECT OWNER, SUM(BYTES)/1024/1024 MB FROM DBA_EXTENTS
GROUP BY OWNER

-- ORACLE SQL QUERY TO CALCULATE SIZE FROM THE DIFERENT SEGMENTS 
-- (TABLES, INDEXES, UNDO, ROLLBACK, CLUSTER, ...)
SELECT SEGMENT_TYPE, SUM(BYTES)/1024/1024 MB FROM DBA_EXTENTS
GROUP BY SEGMENT_TYPE

-- ORACLE SQL QUERY TO OBTAIN ALL THE ORACLE FUNCTIONS: NVL, ABS, LTRIM, ...
SELECT DISTINCT OBJECT_NAME
FROM ALL_ARGUMENTS
WHERE PACKAGE_NAME = 'STANDARD'
ORDER BY OBJECT_NAME

-- ORACLE SQL QUERY TO CALCULATE THE SIZE OF ALL THE DATABASE OBJECTS, ORDERING FROM MORE TO LESS
SELECT SEGMENT_NAME, SUM(BYTES)/1024/1024 MB FROM DBA_EXTENTS
GROUP BY SEGMENT_NAME
ORDER BY 2 DESC 
