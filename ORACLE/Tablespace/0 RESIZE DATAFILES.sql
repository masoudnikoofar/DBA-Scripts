SELECT 'ALTER DATABASE DATAFILE''' || SUBSTR(D.FILE_NAME, 1, 80) ||
       ''' RESIZE ' || ROUND(ROUND((MAX(D.BYTES)) -
                                   (SUM(DECODE(F.BYTES, NULL, 0, F.BYTES))),
                                   2) + 100000) || ';'
  FROM DBA_FREE_SPACE F, DBA_DATA_FILES D, DBA_TABLESPACES T
 WHERE T.TABLESPACE_NAME = D.TABLESPACE_NAME
   AND F.TABLESPACE_NAME(+) = D.TABLESPACE_NAME
   AND F.FILE_ID(+) = D.FILE_ID
 GROUP BY T.TABLESPACE_NAME, D.FILE_NAME, T.PCT_INCREASE, T.STATUS

 
 
 

 
 
WITH
 HWM AS (
  -- GET HIGHEST BLOCK ID FROM EACH DATAFILES ( FROM X$KTFBUE AS WE DON'T NEED ALL JOINS FROM DBA_EXTENTS )
  SELECT /*+ MATERIALIZE */ KTFBUESEGTSN TS#,KTFBUEFNO RELATIVE_FNO,MAX(KTFBUEBNO+KTFBUEBLKS-1) HWM_BLOCKS
  FROM SYS.X$KTFBUE GROUP BY KTFBUEFNO,KTFBUESEGTSN
 ),
 HWMTS AS (
  -- JOIN TS# WITH TABLESPACE_NAME
  SELECT NAME TABLESPACE_NAME,RELATIVE_FNO,HWM_BLOCKS
  FROM HWM JOIN V$TABLESPACE USING(TS#)
 ),
 HWMDF AS (
  -- JOIN WITH DATAFILES, PUT 5M MINIMUM FOR DATAFILES WITH NO EXTENTS
  SELECT FILE_NAME,NVL(HWM_BLOCKS*(BYTES/BLOCKS),5*1024*1024) HWM_BYTES,BYTES,AUTOEXTENSIBLE,MAXBYTES
  FROM HWMTS RIGHT JOIN DBA_DATA_FILES USING(TABLESPACE_NAME,RELATIVE_FNO)
 )
SELECT
 CASE WHEN AUTOEXTENSIBLE='YES' AND MAXBYTES>=BYTES
 THEN -- WE GENERATE RESIZE STATEMENTS ONLY IF AUTOEXTENSIBLE CAN GROW BACK TO CURRENT SIZE
  '/* RECLAIM '||TO_CHAR(CEIL((BYTES-HWM_BYTES)/1024/1024),999999)
   ||'M FROM '||TO_CHAR(CEIL(BYTES/1024/1024),999999)||'M */ '
   ||'ALTER DATABASE DATAFILE '''||FILE_NAME||''' RESIZE '||CEIL(HWM_BYTES/1024/1024)||'M;'
 ELSE -- GENERATE ONLY A COMMENT WHEN AUTOEXTENSIBLE IS OFF
  '/* RECLAIM '||TO_CHAR(CEIL((BYTES-HWM_BYTES)/1024/1024),999999)
   ||'M FROM '||TO_CHAR(CEIL(BYTES/1024/1024),999999)
   ||'M AFTER SETTING AUTOEXTENSIBLE MAXSIZE HIGHER THAN CURRENT SIZE FOR FILE '
   || FILE_NAME||' */'
 END SQL
FROM HWMDF
WHERE
 BYTES-HWM_BYTES>1024*1024 -- RESIZE ONLY IF AT LEAST 1MB CAN BE RECLAIMED
ORDER BY BYTES-HWM_BYTES DESC;